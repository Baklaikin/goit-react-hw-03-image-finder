{"version":3,"sources":["components/searchBar/searchBar.styled.jsx","components/searchBar/searchBar.jsx","components/ImageGalleryItem/ImageGalleryItem.styled.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.styled.jsx","components/ImageGallery/ImageGallery.jsx","components/LoadMoreBtn/LoadMore.styled.jsx","components/LoadMoreBtn/LoadMore.jsx","components/Modal/Modal.styled.jsx","components/Modal/Modal.jsx","services/FetchApi.jsx","App.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","App.js","index.js"],"names":["Header","styled","header","SearchButton","button","Span","span","Input","input","Form","form","SearchBar","onSubmit","event","preventDefault","word","target","searchForm","value","toast","warn","type","name","autoComplete","autoFocus","placeholder","Item","li","Image","img","ImageGalleryItem","images","getBigImage","map","id","webformatURL","tags","largeImageURL","src","alt","onClick","List","ul","ImageGallery","largePicture","LoadMoreBtn","LoadMore","onAction","Overlay","div","ModalWindow","Modal","picture","FetchCollection","a","pictureName","page","axios","get","response","data","hits","Container","LoadContainer","LoaderSpinner","color","height","width","App","state","pictures","largeImage","status","openModal","handleInput","searchWord","setState","scrollSmoth","window","scrollTo","top","document","documentElement","scrollHeight","behavior","toggleModal","e","onLoadMoreClick","prevState","bigPictureHandler","image","keyDownHandler","code","prevProps","this","searchWordIsNew","pageIsNew","console","log","message","addEventListener","removeEventListener","showLoadMoreButton","length","showModal","showLoader","Component","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.2d5e7cef.chunk.js","sourcesContent":["import styled from \"@emotion/styled\";\r\n\r\nexport const Header = styled.header`\r\n top: 0;\r\n  left: 0;\r\n  position: sticky;\r\n  z-index: 1100;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  min-height: 64px;\r\n  padding-right: 24px;\r\n  padding-left: 24px;\r\n  padding-top: 12px;\r\n  padding-bottom: 12px;\r\n  color: #fff;\r\n  background-color: #3f51b5;\r\n  box-shadow: 0px 2px 4px -1px rgba(0, 0, 0, 0.2),\r\n    0px 4px 5px 0px rgba(0, 0, 0, 0.14), 0px 1px 10px 0px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const SearchButton = styled.button`\r\n  display: inline-block;\r\n  width: 48px;\r\n  height: 48px;\r\n  border: 0;\r\n  background-image: url('https://image.flaticon.com/icons/svg/149/149852.svg');\r\n  background-size: 40%;\r\n  background-repeat: no-repeat;\r\n  background-position: center;\r\n  opacity: 0.6;\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  cursor: pointer;\r\n  outline: none;\r\n\r\n  &:hover {\r\n      opacity: 1;\r\n  }\r\n`;\r\n\r\nexport const Span = styled.span`\r\n  position: absolute;\r\n  width: 1px;\r\n  height: 1px;\r\n  padding: 0;\r\n  overflow: hidden;\r\n  clip: rect(0, 0, 0, 0);\r\n  white-space: nowrap;\r\n  clip-path: inset(50%);\r\n  border: 0;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  display: inline-block;\r\n  width: 100%;\r\n  font: inherit;\r\n  font-size: 20px;\r\n  border: none;\r\n  outline: none;\r\n  padding-left: 4px;\r\n  padding-right: 4px;\r\n\r\n  &::placeholder {\r\n  font: inherit;\r\n  font-size: 18px;\r\n  }\r\n`;\r\n\r\nexport const Form = styled.form`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 100%;\r\n  max-width: 600px;\r\n  background-color: #fff;\r\n  border-radius: 3px;\r\n  overflow: hidden;\r\n`;","import { toast } from \"react-toastify\";\nimport {\n  Header,\n  SearchButton,\n  Span,\n  Input,\n  Form,\n} from \"components/searchBar/searchBar.styled\";\n\nexport const SearchBar = ({ onSubmit }) => {\n  const name = (event) => {\n    event.preventDefault();\n    const word = event.target.searchForm.value;\n    if (word === \"\") {\n      toast.warn(\"Введите слово\");\n      return;\n    }\n    onSubmit(word);\n  };\n  return (\n    <Header>\n      <Form onSubmit={name}>\n        <SearchButton type=\"submit\">\n          <Span></Span>\n        </SearchButton>\n\n        <Input\n          name=\"searchForm\"\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search images and photos\"\n        />\n      </Form>\n    </Header>\n  );\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const Item = styled.li`\r\n  border-radius: 2px;\r\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\r\n  0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\r\n`;\r\n\r\nexport const Image = styled.img`\r\nwidth: 100%;\r\nheight: 260px;\r\nobject-fit: cover;\r\ntransition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n&:hover {\r\n    transform: scale(1.03);\r\n    cursor: zoom-in;\r\n}\r\n`;","import {\n  Item,\n  Image,\n} from \"components/ImageGalleryItem/ImageGalleryItem.styled\";\nimport PropTypes from \"prop-types\";\n\nexport const ImageGalleryItem = ({ images, getBigImage }) => {\n  return images.map(({ id, webformatURL, tags, largeImageURL }) => {\n    return (\n      <Item key={id}>\n        <Image\n          src={webformatURL}\n          alt={tags[0]}\n          onClick={() => getBigImage(largeImageURL)}\n        />\n      </Item>\n    );\n  });\n};\n\nImageGalleryItem.propTypes = {\n  images: PropTypes.array,\n  webformatURL: PropTypes.string,\n  tags: PropTypes.string,\n  largeImageURL: PropTypes.string,\n};\n","import styled from '@emotion/styled';\r\n\r\nexport const List = styled.ul`\r\n display: grid;\r\n  max-width: calc(100vw - 48px);\r\n  grid-template-columns: repeat(auto-fill, minmax(320px, 1fr));\r\n  grid-gap: 16px;\r\n  margin-top: 10px;\r\n  margin-bottom: 10px;\r\n  padding: 0;\r\n  list-style: none;\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n`;","import { ImageGalleryItem } from \"components/ImageGalleryItem/ImageGalleryItem\";\nimport { List } from \"components/ImageGallery/ImageGallery.styled.jsx\";\nimport PropTypes from \"prop-types\";\n\nexport const ImageGallery = ({ images, largePicture }) => {\n  return (\n    <List>\n      <ImageGalleryItem images={images} getBigImage={largePicture} />\n    </List>\n  );\n};\n\nImageGallery.propTypes = {\n  images: PropTypes.array.isRequired,\n};\n","import styled from \"@emotion/styled\";\r\n\r\nexport const LoadMoreBtn = styled.button`\r\n  margin-left: auto;\r\n  margin-right: auto;\r\n  padding: 8px 16px;\r\n  border-radius: 2px;\r\n  background-color: #3f51b5;\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  text-align: center;\r\n  display: inline-block;\r\n  color: #fff;\r\n  border: 0;\r\n  text-decoration: none;\r\n  cursor: pointer;\r\n  font-family: inherit;\r\n  font-size: 18px;\r\n  line-height: 24px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  width: 180px;\r\n  box-shadow: 0px 3px 1px -2px rgba(0, 0, 0, 0.2),\r\n    0px 2px 2px 0px rgba(0, 0, 0, 0.14), 0px 1px 5px 0px rgba(0, 0, 0, 0.12);\r\n\r\n    &:hover,\r\n    &:focus {\r\n      background-color: #303f9f;\r\n    }\r\n`;","import { LoadMoreBtn } from \"components/LoadMoreBtn/LoadMore.styled\";\r\n\r\nexport const LoadMore = ({ onAction }) => {\r\n    return <LoadMoreBtn type=\"button\" onClick={()=>onAction() }>Load more</LoadMoreBtn>\r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Overlay = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  background-color: rgba(0, 0, 0, 0.8);\r\n  z-index: 1200;\r\n`;\r\n\r\nexport const ModalWindow = styled.div`\r\n  max-width: calc(100vw - 48px);\r\n  max-height: calc(100vh - 24px);\r\n`;\r\n\r\n","import { Overlay, ModalWindow } from \"components/Modal/Modal.styled\";\nimport PropTypes from \"prop-types\";\n\nexport const Modal = ({ picture, onClick }) => {\n  return (\n    <Overlay onClick={onClick}>\n      <ModalWindow>\n        <img src={picture} alt=\"Big\" />\n      </ModalWindow>\n    </Overlay>\n  );\n};\nModal.propTypes = {\n  picture: PropTypes.string.isRequired,\n};\n","import axios from \"axios\";\r\n\r\nexport const FetchCollection = async({ pictureName, page }) => {\r\n    const key = \"22628996-cf4023f9c883b96dd8e407c0b\";\r\n    const BASE_URL = \"https://pixabay.com/api\";\r\n    const params = \"image_type=photo&orientation=horizontal&per_page=12\";\r\n    \r\n    const response = await axios.get(`${BASE_URL}/?key=${key}&q=${pictureName}&page=${page}&${params}`);\r\n    return response.data.hits; \r\n}","import styled from \"@emotion/styled\";\r\n\r\nexport const Container = styled.div`\r\n  display: grid;\r\n  grid-template-columns: 1fr;\r\n  grid-gap: 16px;\r\n  padding-bottom: 24px;\r\n`;","import styled from \"@emotion/styled\";\r\n\r\nexport const LoadContainer = styled.div`\r\nmargin-left: auto;\r\nmargin-right: auto;\r\n`;","import {LoadContainer} from \"components/Loader/Loader.styled\";\r\nimport Loader from \"react-loader-spinner\";\r\n\r\nexport const LoaderSpinner = () => {\r\n    return <LoadContainer>\r\n          <Loader type=\"Circles\" color=\"#00BFFF\" height={50} width={50} />\r\n      </LoadContainer>\r\n}\r\n  ","import React, { Component } from \"react\";\nimport { SearchBar } from \"components/searchBar\";\nimport { ImageGallery } from \"components/ImageGallery/ImageGallery\";\nimport { LoadMore } from \"components/LoadMoreBtn/LoadMore\";\nimport { Modal } from \"components/Modal/Modal\";\nimport { FetchCollection } from \"./services/FetchApi\";\nimport { ToastContainer } from \"react-toastify\";\nimport { Container } from \"App.styled\";\nimport { LoaderSpinner } from \"components/Loader/Loader\";\nimport PropTypes from \"prop-types\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport \"./App.styled\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nclass App extends Component {\n  state = {\n    pictureName: null,\n    pictures: [],\n    largeImage: null,\n    status: \"idle\",\n    page: 1,\n    openModal: false,\n  };\n\n  handleInput = (searchWord) => {\n    this.setState({ pictureName: searchWord });\n  };\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { pictureName, page } = this.state;\n    const searchWordIsNew = pictureName !== prevState.pictureName;\n    const pageIsNew = page !== prevState.page;\n\n    if (searchWordIsNew) {\n      this.setState({ status: \"pending\" });\n      try {\n        this.setState({ pictures: [], page: 1 });\n        const pictures = await FetchCollection({ pictureName, page });\n        this.setState({ pictures });\n      } catch (error) {\n        console.log(error.message);\n      }\n      this.setState({ status: \"resolved\" });\n      return;\n    }\n\n    if (searchWordIsNew || pageIsNew) {\n      this.setState({ status: \"pending\" });\n      try {\n        const pictures = await FetchCollection({ pictureName, page });\n        this.setState((prevState) => {\n          let newArr = [];\n          newArr = [...prevState.pictures, ...pictures];\n          return { pictures: newArr };\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n      this.setState({ status: \"resolved\" });\n      this.scrollSmoth();\n      return;\n    }\n\n    window.addEventListener(\"keydown\", this.keyDownHandler);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"keydown\", this.keyDownHandler);\n  }\n\n  scrollSmoth = () => {\n    window.scrollTo({\n      top: document.documentElement.scrollHeight,\n      behavior: \"smooth\",\n    });\n  };\n\n  toggleModal = (e) => {\n    this.setState({ openModal: !this.state.openModal });\n  };\n\n  onLoadMoreClick = () =>\n    this.setState((prevState) => ({ page: prevState.page + 1 }));\n\n  bigPictureHandler = (image) => {\n    this.setState({ largeImage: image });\n    this.toggleModal();\n  };\n\n  keyDownHandler = (e) => {\n    if (e.code !== \"Escape\") {\n      return;\n    }\n    this.toggleModal();\n  };\n\n  render() {\n    const showLoadMoreButton = this.state.pictures.length > 0;\n    const showModal = this.state.openModal;\n    const showLoader = this.state.status === \"pending\";\n\n    return (\n      <Container>\n        <SearchBar onSubmit={this.handleInput} />\n        {showLoader && <LoaderSpinner />}\n        <ImageGallery\n          images={this.state.pictures}\n          largePicture={this.bigPictureHandler}\n        />\n        {showLoadMoreButton && <LoadMore onAction={this.onLoadMoreClick} />}\n        <ToastContainer />\n        {showModal && (\n          <Modal picture={this.state.largeImage} onClick={this.toggleModal} />\n        )}\n      </Container>\n    );\n  }\n}\n\nApp.propTypes = {\n  pictureName: PropTypes.string,\n  pictures: PropTypes.array,\n  largeImage: PropTypes.string,\n  status: PropTypes.string,\n  page: PropTypes.number,\n  openModal: PropTypes.bool,\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n// import reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}